clear; clc;
newn = perl('new.pl','booth.g.v');
newt = perl('newtypes.pl','booth.g.v');
names = strsplit(newn,' ');
types = strsplit(newt,' ');

for i=1:numel(names)
if (not(isempty(strfind(names{i},'['))))
    t = strsplit(names{i},'[');
    t = strsplit(t{2},']');
    t = strsplit(t{1},':');
    mini = min(t);
    maxi = max(t);
    for
end

end


tl = strfind(types{1},'elephant');
if (isempty(tl))
    t = 2;
end
%following code creates and topologically sorts DAG, then graphs it
%DG = sparse(vertices1,vertices2,true,numel(newn),numel(newt)); 
%order = graphtopoorder(DG);
%DG = DG(order,order);
%view(biograph(DG));
